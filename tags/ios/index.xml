<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ios on geektree0101.github.io</title><link>https://geektree0101.github.io/tags/ios/</link><description>Recent content in ios on geektree0101.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright &amp;copy; 2021 a hugo theme by [somrat](https://somrat.netlify.com)</copyright><lastBuildDate>Mon, 23 Aug 2021 14:33:41 +0000</lastBuildDate><atom:link href="https://geektree0101.github.io/tags/ios/index.xml" rel="self" type="application/rss+xml"/><item><title>모듈화하고 Needle 적용해보기</title><link>https://geektree0101.github.io/blog/blog4/</link><pubDate>Mon, 23 Aug 2021 14:33:41 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog4/</guid><description>8월 11일 오늘도 평화로운 당근마켓의 iOS개발자들은 워크샵을 열어서 VoIP도 뜯어보고 당근마켓 iOS 프로젝트 미래에 대해서 이야기를 나누고 있었다.</description></item><item><title>Clean Swift Scaffold</title><link>https://geektree0101.github.io/blog/blog1/</link><pubDate>Sat, 21 Aug 2021 00:00:00 +0900</pubDate><guid>https://geektree0101.github.io/blog/blog1/</guid><description>2019년 6월쯤이였나.. 당근마켓은 서초루비를 운영하면서 뛰어난 루비개발자들이 루비로 당근마켓 서비스를 열심히 만들고 있었다.</description></item><item><title>네이티브 개발자와 함께하는 피드 서비스 설계하기</title><link>https://geektree0101.github.io/blog/blog2/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0900</pubDate><guid>https://geektree0101.github.io/blog/blog2/</guid><description>지난 4년전에 Vingle재직 당시 Texture를 기반으로 피드 퍼포먼스를 개선 했던 적이 있었어요.</description></item><item><title>iOS 14 CTTelephonyNetworkInfo</title><link>https://geektree0101.github.io/blog/blog8/</link><pubDate>Sat, 19 Sep 2020 09:25:48 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog8/</guid><description>iOS 13 이하에선 serviceSubscriberCellularProviders 를 출력하면 국내 디바이스에선 듀얼 유심이 아니기 때문에 CTCarrier 반환값은 한개만 나온다.</description></item><item><title>iOS &amp; Android Declarative UI Programming 방식이 가져온 변화들</title><link>https://geektree0101.github.io/blog/blog10/</link><pubDate>Mon, 04 May 2020 04:06:32 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog10/</guid><description>Hello Declarative UI Programming! 선언적인 UI 개발방식의 역사는 짧지만은 않습니다. 애초에 웹기술에서는 기본적으로 사용 되어왔던 방식입니다.</description></item><item><title>[TIp] ASCollectionNode &amp; Rotation</title><link>https://geektree0101.github.io/blog/blog12/</link><pubDate>Fri, 31 Jan 2020 14:25:18 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog12/</guid><description>How to rotate ASCollectionNode efficiently?
In UICollectionView case, you just follow above code.</description></item><item><title>ASCollectionNode 다루기 #1</title><link>https://geektree0101.github.io/blog/blog11/</link><pubDate>Fri, 31 Jan 2020 12:41:56 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog11/</guid><description>UICollectionView만 있으면 세상에 현존하는 어떠한 형태의 화면이든 자유롭게 그려낼 수 있는 아주 멋진 View에요.</description></item><item><title>맛있는 반응형 스파게티 레시피</title><link>https://geektree0101.github.io/blog/blog13/</link><pubDate>Wed, 18 Sep 2019 15:26:05 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog13/</guid><description>Rx(ReactiveX)는 정말 힙하고 멋지고 .. Awesome합니다.
Map, FlatMap, Merge, withLastestFrom등과 같은 수 많은 연산자들과 유연한 스케줄링 및 멀티스레딩 등…</description></item><item><title>Hello Knot</title><link>https://geektree0101.github.io/blog/blog14/</link><pubDate>Fri, 23 Aug 2019 01:08:50 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog14/</guid><description>클린 아키텍처
_&amp;ldquo;살아있는 전설이 들려주는 실용적인 소프트웨어 아키텍처 원칙&amp;quot;소프트웨어 아키텍처의 보편 원칙을 적용하면 소프트웨어 수명 전반에서 개발자 생산성을 획기적으로 끌어올릴 수 있다.</description></item><item><title>SwiftUI와 Texture의 미래?에 대한 고찰 #1</title><link>https://geektree0101.github.io/blog/blog16/</link><pubDate>Thu, 06 Jun 2019 13:30:24 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog16/</guid><description>WWDC2019에서 드디어 일냈다. Autolayout이 아닌 flexible한 DSL기반 UI 개발을 할 수 있게 되었다.</description></item><item><title>아~ Fastlane 이중인증 해결법</title><link>https://geektree0101.github.io/blog/blog17/</link><pubDate>Fri, 24 May 2019 03:13:21 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog17/</guid><description>Apple itune connect two-factor auth issue 1. Get two factor session cookie spaceauth를 이용하여 session cookie를 가져옵니다.</description></item><item><title>Vingle Texture Style guide</title><link>https://geektree0101.github.io/blog/blog18/</link><pubDate>Thu, 14 Feb 2019 12:53:17 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog18/</guid><description>We hope anybody who loves iOS and Texture find this guide helpful!</description></item><item><title>VEditorKit: Lightweight and Powerful Editor Kit (Part 1. NSTextStorage)</title><link>https://geektree0101.github.io/blog/blog19/</link><pubDate>Sun, 20 Jan 2019 04:23:30 +0000</pubDate><guid>https://geektree0101.github.io/blog/blog19/</guid><description>Lightweight and Powerful Editor Kit built on Texture(AsyncDisplayKit)
VEditorKit provides the most core functionality needed for the editor.</description></item><item><title>Hello Bazel!</title><link>https://geektree0101.github.io/blog/2018-12-23_hello-bazel-db5d237e204c/</link><pubDate>Sun, 23 Dec 2018 13:57:25 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-12-23_hello-bazel-db5d237e204c/</guid><description>이번 주말동안 나는 약 8시간을 Bazel에 사용했다.
처음엔 Facebook Buck에 관심있었으나 어차피 Buck은 Bazel위에 만들어진것이고 솔직히 스크립트 작성하는데 여러방면에 있어서는 큰 차이가 없다.</description></item><item><title>Texture, 현업 사용가이드</title><link>https://geektree0101.github.io/blog/2018-12-21_texture-98865bd6a38/</link><pubDate>Fri, 21 Dec 2018 04:57:46 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-12-21_texture-98865bd6a38/</guid><description>안녕하세요 저는 RxSwift를 즐겨사용하며, Texture 커뮤니티에서 활동중인 Vingle iOS개발자 Geektree0101입니다.</description></item><item><title>Buck으로 iOS앱 빌드해보자!</title><link>https://geektree0101.github.io/blog/2018-12-19_buck-ios-d811ad541416/</link><pubDate>Wed, 19 Dec 2018 13:50:48 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-12-19_buck-ios-d811ad541416/</guid><description>화장실 갔다와 커피를 타고 자리에 다시 돌아와도 Xcode는 여전히 빌드를 돌리고 있었습니다.</description></item><item><title>Let’s make an iOS Google Chrome Pull to refresh with Texture</title><link>https://geektree0101.github.io/blog/2018-11-11_let-s-make-an-ios-google-chrome-pull-to-refresh-with-texture-6770b620a6b6/</link><pubDate>Sun, 11 Nov 2018 07:09:24 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-11-11_let-s-make-an-ios-google-chrome-pull-to-refresh-with-texture-6770b620a6b6/</guid><description>Today, I made [Pull to Refresh Interaction Tab] like an iOS Google Chrome application.</description></item><item><title>Floating UISearchBar best practice with Texture(AsyncDisplayKit)</title><link>https://geektree0101.github.io/blog/2018-11-10_floating-uisearchbar-best-practice-with-texture-asyncdisplaykit-9978a662982d/</link><pubDate>Sat, 10 Nov 2018 07:29:38 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-11-10_floating-uisearchbar-best-practice-with-texture-asyncdisplaykit-9978a662982d/</guid><description>Today, I wanna show you that customized UISearchBar with Texture</description></item><item><title>[iOS] Let’s Tracking Visible Cell on ScrollView</title><link>https://geektree0101.github.io/blog/2018-10-28_-ios-let-s-tracking-visible-cell-on-scrollview-7f40922f1165/</link><pubDate>Sun, 28 Oct 2018 07:19:54 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-10-28_-ios-let-s-tracking-visible-cell-on-scrollview-7f40922f1165/</guid><description>In my experience, When i makes content impression tracking service then i uses iOS UIKit default delegate method such as UITableView &amp;amp; UICollectionView willDisplayCell method, didEnterVisibleStatus in Texture(AsyncDisplayKit) and so on.</description></item><item><title>CAGradientLayer with Texture</title><link>https://geektree0101.github.io/blog/2018-09-16_cagradientlayer-with-texture-7219074cfa4e/</link><pubDate>Sun, 16 Sep 2018 04:14:35 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-09-16_cagradientlayer-with-texture-7219074cfa4e/</guid><description>1. Define Gradient Direction as Enum 2. CAGradientLayer contain check 3.</description></item><item><title>How to make Bouncing Table HeaderView with Texture?</title><link>https://geektree0101.github.io/blog/2018-09-16_how-to-make-bouncing-table-headerview-with-texture-94a95c216666/</link><pubDate>Sun, 16 Sep 2018 03:44:57 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-09-16_how-to-make-bouncing-table-headerview-with-texture-94a95c216666/</guid><description>1. Define Bouncing Area 2. Make Constraints Bouncing Area Node Unfortunately, Recently Texture doesn’t support tableHeaderNode (In Texture 2.</description></item><item><title>iOS Storybook with Texture</title><link>https://geektree0101.github.io/blog/2018-08-26_ios-storybook-with-texture-56608805b981/</link><pubDate>Sun, 26 Aug 2018 06:44:39 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-08-26_ios-storybook-with-texture-56608805b981/</guid><description>Recently, Our Vingle Web-Front team applied the storybook to the development environment.</description></item><item><title>비동기 UI 업데이트가 Texture가 Layout을 계산하는 과정을 방해한다.</title><link>https://geektree0101.github.io/blog/2018-08-23_-ui-texture-layout-706d733467e1/</link><pubDate>Thu, 23 Aug 2018 00:04:46 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-08-23_-ui-texture-layout-706d733467e1/</guid><description>위의 UI결과화면은 didLoad 되기 전에 setNeedsLayout을 호출 할 경우 bounds가 최초 또는 Pended Layout Bounds로 처리되는 현상입니다.</description></item><item><title>Model-View-Intent with Texture</title><link>https://geektree0101.github.io/blog/2018-08-11_model-view-intent-with-texture-3ce1b4e01b1e/</link><pubDate>Sat, 11 Aug 2018 06:24:40 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-08-11_model-view-intent-with-texture-3ce1b4e01b1e/</guid><description>1. Model ASRenderModelProtocol &amp;amp; ASRenderModelIdentifier is convenience ID object &amp;amp; protocol for identifying the model on ASModelSyncronizer.</description></item><item><title>Texture 2.7: RxSwift와 setNeedsLayout에 대한 고찰</title><link>https://geektree0101.github.io/blog/2018-08-03_texture-2-7-rxswift-setneedslayout-298609b85e1f/</link><pubDate>Fri, 03 Aug 2018 17:05:52 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-08-03_texture-2-7-rxswift-setneedslayout-298609b85e1f/</guid><description>Texture 2.7에서 많은 변화가 있었습니다. iOS 11 iPhoneX safeArea를 node 어디서든 적용할 수 있게 되었을 뿐만 아니라 전반적으로 퍼포먼스가 상향되었습니다.</description></item><item><title>Smooth &amp; responsive VideoPlayer Feed</title><link>https://geektree0101.github.io/blog/2018-07-22_smooth-responsive-videoplayer-feed-2c9763c7e32e/</link><pubDate>Sun, 22 Jul 2018 17:05:04 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-07-22_smooth-responsive-videoplayer-feed-2c9763c7e32e/</guid><description>ASVideoNode
_Texture_texturegroup.org
이번 주제는 ASVideoNode로 간단한 Feed를 만들겁니다.
ASVideoNode에는 shouldAutoPlay라는 Property를 제공해줍니다.</description></item><item><title>Texture Reactive Wrapper [Let us: Go! 2018 Summer]</title><link>https://geektree0101.github.io/blog/2018-07-21_texture-reactive-wrapper-let-us-go-2018-summer-5e9ac4f0729b/</link><pubDate>Sat, 21 Jul 2018 11:31:54 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-07-21_texture-reactive-wrapper-let-us-go-2018-summer-5e9ac4f0729b/</guid><description>본 게시물은 Let us: Go! 2018 summer 발표내용을 정리한 게시물 입니다.</description></item><item><title>How to pre-append ASCellNode like a Chat Application</title><link>https://geektree0101.github.io/blog/2018-06-06_how-to-pre-append-ascellnode-like-a-chat-application-23b35d39b6cb/</link><pubDate>Wed, 06 Jun 2018 04:08:11 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-06-06_how-to-pre-append-ascellnode-like-a-chat-application-23b35d39b6cb/</guid><description>How to pre-append ASCellNode like a Chat Application? Texture is an iOS framework built on top of UIKit that keeps even the most complex user interfaces smooth and responsive.</description></item><item><title>Texture Best Practice</title><link>https://geektree0101.github.io/blog/2018-05-19_texture-best-practice-1f0ba1a9d903/</link><pubDate>Sat, 19 May 2018 04:29:44 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-05-19_texture-best-practice-1f0ba1a9d903/</guid><description>Keeps the most complex iOS user interfaces smooth and responsive. — Texture —</description></item><item><title>Texture Best Practice #5</title><link>https://geektree0101.github.io/blog/2018-05-19_texture-best-practice-5-8958482e7fb3/</link><pubDate>Sat, 19 May 2018 03:55:29 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-05-19_texture-best-practice-5-8958482e7fb3/</guid><description>서론 지난 1 ~ 4 편까지는 전반적으로 Texture를 어떻게 활용해서 기본적인 UI 구성법과 개발자가 주로 실수하는 부분 및 노하우에 대해서 다뤘고, 여기까지 오신분들은 기본적인 Application을 뚝딱 만들어 내실 수 있을꺼라 생각이 듭니다.</description></item><item><title>Texture Best Practice #4</title><link>https://geektree0101.github.io/blog/2018-05-12_texture-best-practice-4-f8d137500bb4/</link><pubDate>Sat, 12 May 2018 06:38:07 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-05-12_texture-best-practice-4-f8d137500bb4/</guid><description>#1, 2, 3 을 차근차근 숙지하시고 진행하신 분들이라면 필자가 체감으로는 이제 제법 나름 괜찮은 UI를 어느정도 만들줄 알거라고 생각합니다.</description></item><item><title>How to use regular expressions to distinguish national languages in Swift</title><link>https://geektree0101.github.io/blog/2018-05-12_how-to-use-regular-expressions-to-distinguish-national-languages-in-swift-c19d6d8d0a97/</link><pubDate>Sat, 12 May 2018 04:00:13 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-05-12_how-to-use-regular-expressions-to-distinguish-national-languages-in-swift-c19d6d8d0a97/</guid><description>String(“안녕하세요”).range(of: “\\p{Hangul}”, options: .regularExpression) True
String(“Say Hello”).range(of: “\\p{Hangul}”, options: .</description></item><item><title>Texture Best Practice #3</title><link>https://geektree0101.github.io/blog/2018-05-01_texture-best-practice-3-eef064094f06/</link><pubDate>Tue, 01 May 2018 15:55:38 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-05-01_texture-best-practice-3-eef064094f06/</guid><description>이전 Texture Best Practice #3에서 다뤘던 내용은 기초적인 LayoutSpec을 잡는 과정과 각종 노하우를 보여주었으면 오늘은 실질적으로 코드 작성을 통해서 위와 같이 복잡한 Layout을 설계를 해보도록 하겠습니다.</description></item><item><title>Texture + RxSwift Interactive Wrapper</title><link>https://geektree0101.github.io/blog/2018-04-18_texture-rxswift-interactive-wrapper-d3c9843ed8d7/</link><pubDate>Wed, 18 Apr 2018 04:24:21 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-04-18_texture-rxswift-interactive-wrapper-d3c9843ed8d7/</guid><description>How to make RxSwift Interactive wrapper for Texture?
Basically, Texture provides various basic components as shown in the picture below.</description></item><item><title>Texture Best Practice #2</title><link>https://geektree0101.github.io/blog/2018-04-13_texture-best-practice-2-7259bde869ee/</link><pubDate>Fri, 13 Apr 2018 09:50:46 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-04-13_texture-best-practice-2-7259bde869ee/</guid><description>Texture Best Practice #2 LayoutSpec 기초 및 노하우
Texture Best Practice #1</description></item><item><title>Texture Best Practice #1</title><link>https://geektree0101.github.io/blog/2018-04-12_texture-best-practice-1-4d830a7ff11b/</link><pubDate>Thu, 12 Apr 2018 04:30:25 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-04-12_texture-best-practice-1-4d830a7ff11b/</guid><description>Texture Best practice #1 기초편
현재 Vingle에서 iOS 개발을 맡고있는 하현수라고 합니다.</description></item><item><title>Chatting application built on Texture</title><link>https://geektree0101.github.io/blog/2018-03-04_chatting-application-built-on-texture-43961d4cb495/</link><pubDate>Sun, 04 Mar 2018 05:28:06 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-03-04_chatting-application-built-on-texture-43961d4cb495/</guid><description>Texture 사용한지 이제 반년이 넘었다.
그 동안 Vingle 앱 내부의 대부분 기능들을 Texture로 만들다보니 나름 여러 노하우라던가 Texture Core 까지 들여다볼 정도로 실력이 많이 늘어난거 같다.</description></item><item><title>Improvement feed performance with Texture(AsyncDisplayKit)</title><link>https://geektree0101.github.io/blog/2018-02-25_improvement-feed-performance-with-texture-asyncdisplaykit-2ef2ee11f06e/</link><pubDate>Sun, 25 Feb 2018 08:33:26 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-02-25_improvement-feed-performance-with-texture-asyncdisplaykit-2ef2ee11f06e/</guid><description>아직도 발열을 못잡네. 게임 돌리는것 보다 발열이 심합니다. 앱 최적화가 그만큼 안된다는 소리겠죠?</description></item><item><title>ASStackLayoutSpec vs UIStackView</title><link>https://geektree0101.github.io/blog/2018-02-25_asstacklayoutspec-vs-uistackview-819beb8e0206/</link><pubDate>Sun, 25 Feb 2018 08:28:49 +0000</pubDate><guid>https://geektree0101.github.io/blog/2018-02-25_asstacklayoutspec-vs-uistackview-819beb8e0206/</guid><description>지난 2018년 2월 Vingle Tech-Talk에서 받은 질문중 하나가 아직도 기억에 남는다.</description></item></channel></rss>