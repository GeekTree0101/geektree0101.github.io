<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bazel on Geektree0101</title>
    <link>/tags/bazel/</link>
    <description>Recent content in bazel on Geektree0101</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 23 Dec 2018 13:57:25 +0000</lastBuildDate><atom:link href="/tags/bazel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello Bazel!</title>
      <link>/blog/2018-12-23_hello-bazel--db5d237e204c/</link>
      <pubDate>Sun, 23 Dec 2018 13:57:25 +0000</pubDate>
      
      <guid>/blog/2018-12-23_hello-bazel--db5d237e204c/</guid>
      <description>이번 주말동안 나는 약 8시간을 Bazel에 사용했다.
처음엔 Facebook Buck에 관심있었으나 어차피 Buck은 Bazel위에 만들어진것이고 솔직히 스크립트 작성하는데 여러방면에 있어서는 큰 차이가 없다.
iOS개발자 시각으로 봤을 때, 딱히 Bazel + tulsi섞어서 굳이 빌드툴을 만들어서 할 필요없다 Xcode에서 기본적으로 설정된 셋팅값만으로도 충분하다. 여러 각종 cocoapod을 섞어 써야한다면 오히려 시간대비 효율이 떨어진다.
이러한 점을 보완해준 PodToBuild라는 Pinterest에서 만든 라이브러리가 있지만 이거 마저 Build 스크립트 쓰기가 정말 귀찮다.
pinterest/PodToBUILD
_An easy way to integrate CocoaPods into Bazel.</description>
    </item>
    
    <item>
      <title>Buck으로 iOS앱 빌드해보자!</title>
      <link>/blog/2018-12-19_buck---ios---------d811ad541416/</link>
      <pubDate>Wed, 19 Dec 2018 13:50:48 +0000</pubDate>
      
      <guid>/blog/2018-12-19_buck---ios---------d811ad541416/</guid>
      <description>화장실 갔다와 커피를 타고 자리에 다시 돌아와도 Xcode는 여전히 빌드를 돌리고 있었습니다.
Xcode 빌드 속도는 왜 이렇게 느린걸까?
앱의 규모가 커지면 커질 수록 느려지는 빌드속도…
작년 부터 회사 앱에서 xib, storyboard를 99%박멸해서 그나마 2년전에 비하면 지금이 양반이다.
빌드환경 인프라와 최적화, 생산성을 고민한 끝에 나는 회사에서 여유시간 있을 때 마다 짬짬이 예광탄을 쏘아본 결과 Buck으로 수렴한다는 사실을 알게 되었다.
발음 조심하자, **ck이 아니라 Buck이다.
Buck is a build system developed and used by Facebook.</description>
    </item>
    
  </channel>
</rss>
